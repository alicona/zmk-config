/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/*
* &adc {
* 	status = "okay";
* };
*/

/ {
    /*    chosen {
*	zmk,battery = &vbatt;
*    };
*    vbatt: vbatt {
*	compatible = "zmk,battery-voltage-divider";
*	io-channels = <&adc 2>;
*	output-ohms = <2000000>;
*    };
*/

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <2 1>;
            bindings = <&kp ESC>;
        };

        function_layer {
            bindings = <&tog 4>;
            key-positions = <30 33>;
        };

        left_win {
            bindings = <&kp LEFT_WIN>;
            key-positions = <10 11>;
        };

        right_win {
            bindings = <&kp RIGHT_WIN>;
            key-positions = <18 19>;
        };

        bluetooth_layer {
            bindings = <&tog 5>;
            key-positions = <30 32>;
        };

        number_layer {
            bindings = <&tog 3>;
            key-positions = <31 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp E               &kp R             &kp T             &kp Y      &kp U              &kp I                &kp O    &kp P
&kp A  &kp S  &mt LEFT_CONTROL D  &mt LEFT_SHIFT F  &kp G             &kp H      &mt RIGHT_SHIFT J  &mt RIGHT_CONTROL K  &kp L    &kp SEMICOLON
&kp Z  &kp X  &kp C               &kp V             &kp B             &kp N      &kp M              &kp COMMA            &kp DOT  &kp SLASH
                                  &mo 1             &kp LEFT_SHIFT    &kp SPACE  &tog 2
            >;
        };

        Extend_Layer {
            bindings = <
&kp ESCAPE    &kp K_BACK    &kp K_FIND      &kp K_FORWARD     &kp INSERT       &kp PG_UP      &kp HOME       &kp DELETE  &kp END     &kp CAPSLOCK
&sk LEFT_ALT  &sk LEFT_WIN  &sk LEFT_SHIFT  &sk LEFT_CONTROL  &sk RIGHT_ALT    &kp PAGE_DOWN  &kp LEFT       &kp DOWN    &kp UP      &kp RIGHT
&kp LC(Z)     &kp LC(X)     &kp LC(C)       &kp LEFT_WIN      &kp LC(V)        &kp ENTER      &kp BACKSPACE  &kp TAB     &kp C_MENU  &kp PRINTSCREEN
                                            &none             &trans           &kp ENTER      &none
            >;
        };

        Symbols_Layer {
            bindings = <
&kp EXCLAMATION  &kp AT        &kp HASH        &kp DLLR          &kp PERCENT      &kp EQUAL     &kp SINGLE_QUOTE       &kp COLON        &kp SEMICOLON      &kp PLUS
&kp LEFT_ALT     &kp LEFT_WIN  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp CARET        &kp ASTERISK  &kp LEFT_PARENTHESIS   &kp LBRC         &kp LEFT_BRACKET   &kp MINUS
&none            &none         &kp BACKSLASH   &kp PIPE          &kp AMPERSAND    &kp TILDE     &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp UNDERSCORE
                                               &none             &none            &none         &none
            >;
        };

        Numbers_Layer {
            bindings = <
&none     &none         &none           &none      &kp KP_NUMLOCK    &kp EQUAL     &kp N7  &kp N8  &kp N9  &kp PLUS
&kp LALT  &kp LEFT_WIN  &kp LEFT_SHIFT  &kp LCTRL  &kp RALT          &kp ASTERISK  &kp N4  &kp N5  &kp N6  &kp MINUS
&none     &kp C_MENU    &kp TAB         &kp BSPC   &kp RET           &kp N0        &kp N1  &kp N2  &kp N3  &kp FSLH
                                        &none      &none             &none         &none
            >;
        };

        Function_Layer {
            bindings = <
&kp C_STOP  &kp C_PLAY_PAUSE   &kp C_PLAY      &kp C_NEXT       &kp C_BRIGHTNESS_INC    &kp F12  &kp F7  &kp F8  &kp F9  &kp SCROLLLOCK
&kp LALT    &kp LEFT_WIN       &kp LEFT_SHIFT  &kp LCTRL        &kp C_BRIGHTNESS_DEC    &kp F11  &kp F4  &kp F5  &kp F6  &none
&kp C_MUTE  &kp C_VOLUME_DOWN  &kp LS(LC(C))   &kp C_VOLUME_UP  &kp LS(LC(V))           &kp F10  &kp F1  &kp F2  &kp F3  &none
                                               &none            &none                   &kp RET  &none
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans        &trans        &trans    &trans  &trans        &trans        &trans  &trans
&trans  &trans  &bt BT_SEL 0  &bt BT_SEL 1  &trans    &trans  &bt BT_SEL 2  &bt BT_SEL 3  &trans  &trans
&trans  &trans  &trans        &trans        &trans    &trans  &trans        &trans        &trans  &trans
                              &trans        &trans    &trans  &trans
            >;
        };
    };
};
